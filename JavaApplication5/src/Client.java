
import java.io.IOException;
import java.net.Socket;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ESSOLA JULIEN
 */
public class Client extends javax.swing.JFrame {
    static InputStream is;
    static InputStreamReader isr;
    static OutputStream os;
    static BufferedReader br;
    static PrintWriter pw;
    static String msgout;
    static int id;
    static String nom;
    static String mess;
    public Client() {
        initComponents();
        combo();
    }

      public Client(Socket s,int id){
          initComponents();
            this.id=id;
            this.s=s;
            new ClientMT(s,id).start();
           combo(); 
   }
   static String url="jdbc:mysql://localhost:3306/ict207";
   static String login="root";
   static String passwd="";
   static Connection cn=null;
   static Statement st=null;
   static PreparedStatement pst=null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    void combo()
    {
       try {
                    String query = "SELECT * FROM `connexion`";
                    cn = (Connection) DriverManager.getConnection(url, login, passwd);
                    //pst=(PreparedStatement) cn.prepareStatement(query);
                    st = (Statement)cn.createStatement();
                   ResultSet set = st.executeQuery(query);
                    while (set.next()) {
                        String id = set.getString(1);
                        combobox.addItem(id);
                         //JOptionPane.showConfirmDialog(null,nom);
                        //recuperer une donn√©e de la BD.
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                } 
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        go = new javax.swing.JButton();
        msg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgbox = new javax.swing.JTextArea();
        combobox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        envoie = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        go.setBackground(new java.awt.Color(102, 102, 102));
        go.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_project/images/images2_1.jpg"))); // NOI18N
        go.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        go.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        go.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });

        msg.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(msg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(go, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(go, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(msg, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );

        msgbox.setColumns(20);
        msgbox.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 12)); // NOI18N
        msgbox.setRows(5);
        msgbox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setViewportView(msgbox);

        combobox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        combobox.setMaximumRowCount(1000);
        combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        combobox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        combobox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Envoyer A :");

        envoie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                    .addComponent(combobox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(envoie, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(envoie, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
          //EN-FIRST:event_jButton1ActionPerformed
        msgout=msg.getText()+"-"+envoie.getText(); 
        new send(msgout).start();        // TODO add your handling code here:

    }//GEN-LAST:event_goActionPerformed

    private void msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msgActionPerformed

    private void envoieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_envoieActionPerformed

    private void comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxActionPerformed
             // TODO add your handling code here:
               String s=combobox.getSelectedItem().toString();
                   
        try {
                    
                    String query = "SELECT numero FROM `connexion` WHERE username='"+s+"'";
                    cn = (Connection) DriverManager.getConnection(url, login, passwd);
                    //pst=(PreparedStatement) cn.prepareStatement(query);
                    st = (Statement)cn.createStatement();
                   ResultSet set = st.executeQuery(query);
                    if (set.next()) {
                        String id = set.getString(1);
                        envoie.setText(envoie.getText().trim()+id+",");
                         //JOptionPane.showConfirmDialog(null,nom);
                        //recuperer une donn√©e de la BD.
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                } 
    }//GEN-LAST:event_comboboxActionPerformed
    static Socket s;

    public static class ClientMT extends Thread {
        int id;
        public ClientMT(Socket s, int id) {
            this.id = id;
        }

        @Override
        public void run() {

            try {
                is = s.getInputStream();
                isr = new InputStreamReader(is);
                os = s.getOutputStream();
                br = new BufferedReader(isr);
                pw = new PrintWriter(os, true);
                String m;
                pw.println(Integer.toString(id));
                m = br.readLine();
               // msgbox.setText(m);
                JOptionPane.showConfirmDialog(null, m);
                while (true) {
                    new read().start();
                }
            } catch (HeadlessException | IOException ex) {
            }
        }

        public static class read extends Thread {

            @Override
            public void run() {
                try {
                    is = s.getInputStream();
                    isr = new InputStreamReader(is);
                    os = s.getOutputStream();
                    br = new BufferedReader(isr);
                    pw = new PrintWriter(os, true);
                    while (true) {
                       // msgbox.setText(msgbox.getText().trim() + "\n" + br.readLine());
                    }
                } catch (IOException ex) {
                }
            }
        }

    }

    public static class send extends Thread {

        String message;

        public send(String message) {
            this.message = message;
        }

        @Override
        public void run() {
            try {
                is = s.getInputStream();
                isr = new InputStreamReader(is);
                os = s.getOutputStream();
                br = new BufferedReader(isr);
                pw = new PrintWriter(os, true);
                pw.println(message);
            } catch (IOException ex) {
            }
        }
    }

    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Client().setVisible(true);
        });
       // JOptionPane.showConfirmDialog(null, id);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JTextField envoie;
    private javax.swing.JButton go;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField msg;
    private javax.swing.JTextArea msgbox;
    // End of variables declaration//GEN-END:variables
}
